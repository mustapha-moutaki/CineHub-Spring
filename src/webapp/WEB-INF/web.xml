<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- No need to define DispatcherServlet explicitly here if using AppInitializer -->
    <!-- This web.xml primarily serves to trigger ServletContainerInitializer -->
    <!-- Spring's WebApplicationInitializer is picked up automatically by ServletContainerInitializer -->
    <!-- This file can be mostly empty, but sometimes presence of any web.xml helps -->

    <display-name>CineHub Spring Web App</display-name>

    <!-- Context Listener (Optional, AppConfig will be handled by AppInitializer) -->
    <!-- <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            org.mustapha.config.AppConfig
        </param-value>
    </context-param> -->

    <!-- DispatcherServlet (Optional, AppInitializer handles this) -->
    <!-- <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>org.mustapha.config.WebMvcConfig</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping> -->

</web-app>